 

/* Global */
:root{
    /* Color */
    --color-white:#ffffff;
    --color-light-white:#eeeeee;
    --color-dark-white:#bdbdbd;
    --color-pink:#fe918d;
    --color-dark-pink:#ff6863;
    --color-dark-grey:#4d4d4d;
    --color-grey:#616161;
    --color-light-grey:#7c7979;
    --color-blue:#73aace;
    --color-yellow:#fff7d1;
    --color-orange:#feb546;
    --color-black:#000000;

    /* Font size */
    --font-large:48px;
    --font-medium:28px;
    --font-regular:18px;
    --font-small:16px;
    --font-micro:14px;
    /* Font weight */
    --weight-bold:700;
    --weight-semi-bold:600;
    --weight-regular:400;

    /* Size */
    --size-border-radius:4px;

    /* Animiation */
    --animation-duration:250ms;
}

/* Universal tags */
*{
    box-sizing:border-box;
}
body{
    margin:0;
    /* 개발자모드로 보면 바디에 8픽셀 패딩 들어가있는 것 확인할 수 있다. */
    font-family: 'Noto Sans KR', sans-serif;
    /* 폰트 적용 */
    cursor:default;
    /* 커서가 텍스트 위로 가면 모양이 바뀐다. 기본모양으로 유지 */
} 
a{
    text-decoration:none;
    color:var(--color-white);
    /* a태그 text-decoration 사라짐. 밑줄 사라짐 */
}  
ul{
    padding-left:0;
   
    /* padding-left가 40px나 들어가있는 것을 개발자모드로 확인 가능 */
}
li{
    list-style:none;
     /* li태그 점 사라짐 */
}

button{
    background-color:transparent;
    cursor:pointer;
    border:none;
    outline:none;
}
    /* 버튼태그 초기화 */
    

/* Typography */
h1{
    font-size:var(--font-large);
    font-weight:var(--weight-bold);
    color:var(--color-black);
    margin:16px 0;
}
h2{
    font-size:var(--font-medium);
    font-weight:var(--weight-semi-bold);
    color:var(--color-black);
    margin:8px 0;
}
h3{
    font-size:var(--font-regular);
    font-weight:var(--font-regular);
    color:var(--color-black);
    margin:8px 0;
}
p{
    font-size:var(--font-regular);
    font-weight:var(--font-regular);
    color:var(--color-black);
    margin:4px 0;
}


/* Navbar */
#navbar{
    position:fixed;
    width:100%;
    /* position쓰면 인라인으로 성질이 바뀌어버리기 때문에 컨텐츠만큼만 width가 자동으롲 잡힌다. 따라서 100%로 width 설정해줘야한다.*/
    display:flex;
    justify-content: space-between;
    background-color:transparent;
    align-items:center;
    /* align-items 속성은 플렉스 박스에서 플렉스 요소의 수직 방향 정렬 방식을 설정한다. */
    color:var(--color-white);
    padding:16px;
    transition: all var(--animation-duration) ease-in-out;
    z-index: 1;
}
    /* 네브바 컨텐츠들 일렬로 나열, 꾸미기 */
    
.navbar__menu{
    display:flex;
}
    /* 네브바 메뉴 일렬로*/

.navbar__logo{
    font-size:var(--font-medium);
    font-weight:var(--weight-semi-bold);
}

#navbar.navbar--dark{
    background-color:var(--color-pink);
    padding:8px;
}

    /* 네브바 로고 */

.navbar__menu__item{
    padding:8px 12px;
    margin:0 4px;
    cursor:pointer;
    border:1px solid transparent;
    /* 텍스트 보더 추가되면서 춤추는거 방지하기 위해 */
    border-radius:var(--size-border-radius);
}
    /* 메뉴바 설정 */

.navbar__menu__item:hover{
    border-color:var(--color-white);
    background-color:var(--color-dark-pink);
    border-radius: var(--size-border-radius);
}
    /* 메뉴바 호버효과적용 */

.navbar__toggle-btn{
    position:absolute;
    top:22px;
    right:32px;
    font-size:24px;
    color:var(--color-white);
    display:none;
}

/* Home */
#home{
    background:url("image/homebackground.png") center/cover no-repeat;
    padding:40px;
    text-align:center;
    padding-top:100px;
}
    /* 배경 만들기 */

.home__avatar{
    width:250px;
    height:250px;
    border-radius:50%;
    border:2px solid var(--color-light-white);
}
    /* 아바타 동그랗게 만들기 */

.home__title,
.home__description{
    color:var(--color-white);
}

.home__contact{
    color:var(--color-white);
    font-size:var(--font-regular);
    font-weight:var(--weight-regular);
    margin:24px;
    padding:8px 12px;
    border:2px solid white;
    border-radius:var(--size-border-radius);
}

.home__contact:hover{
    background-color: var(--color-orange);
}



/* Section common */
.section{
    padding:50px;
    text-align:center;
    margin:0 auto;
    /* 여기서 당황. margin:0 auto 줘야하는 이유?*/
    /* 인라인속성은 패딩, 블럭속성은 마진. 얘는 블럭태그에 너비 조절해준 것이므로  */
}
.section__container{
    max-width:1200px;
    margin:auto;
}

/* About */
.about__majors{
    display:flex;
    justify-content:space-between;
    /* 이런거 보면 반응형으로 만들려면 확실히 flex박스를 이용하나보다. 기존에는 레이아웃박스 직접 만들면서 했을듯. */
    margin:80px 0;
}

.major__icon{
    width:170px;
    height:170px;
    font-size:70px;
    color:var(--color-blue);
    line-height:170px;
    border:1px solid var(--color-blue);
    border-radius:50%;
    margin-bottom:16px;
    margin:0 auto;
    /* margin:0 auto 엘리는 안줬지만 난 줘야하는데? 안주면 반응형에서 왼쪽으로 붙어버림 */
}
.major__icon i {
    transition:all var(--animation-duration) ease;
}
.major__icon i:hover{
    color:var(--color-pink);
    transform:rotate(-30deg) scale(1.1);
}
    /* major icon의 i태그에 올라갔을 때 hover 작동하도록 */
.major__title, .major__description{
    color:var(--color-dark-grey);
}

.major__description{
    font-size:var(--font-small);
}

.job{
    display:flex;
    align-items:center;
}
    /* job이 블럭태그이니까 그 안에 애들 센터 먹인 것 */

.job__description{
    margin:0 16px;
    text-align:left;
}
/* body마진<section마진<job__description마진<p마진 순서로 마진 우선순위 강해진다. */

.job__name,
.job__period{
    color:var(--color-light-grey);
}
.job__name{
    font-size:var(--font-small);
}
.job__period{
    font-size:var(--font-micro);
}


/* Skill */
#skills{
    background-color:var(--color-yellow);
}

.skillset{
    display:flex;
    background-color:var(--color-light-grey);
    color:var(--color-light-white);
    margin:20px 0;
}

.skillset__title{
    color:var(--color-white);
}

.skillset__left{
    flex-basis:60%;
    background-color:var(--color-dark-grey);
    padding:20px 40px;
}

.skill{
    margin-bottom:32px;
}

.skill__description{
    display:flex;
    justify-content:space-between;
}
    /* 이미 양 옆으로 정렬돼있는데 왜 display:flex를 썼을까? space-between쓰려고인듯? */
.skill__bar{
    width:100%;
    height:3px;
    background-color:var(--color-grey);
}

.skill__value{
    width:100%;
    height:3px;
    background-color:var(--color-orange);
    /* width는 html에서 관리해야한다. css로 하면 전부 다 같은 수치로 나오기 때문에 */
}

.skillset__right{
    flex-basis:40%;
}
    /* 자동적으로 화면에서 사이즈를 차지한다! 굿 */
    /* 안하면 그냥 크기에 맞춰서 나옴. 근데 block인데? 왜 이렇게 나오지? */
    /* display:flex를 주면서 안에 태그들 속성이 block에서 inline-block으로 바뀌기때문 */

.tools{
    background-color:var(--color-grey);
}

.tools,
.etc{
    padding:20px;
}

/* Work */
.work__categories{
    margin:40px;
}
.category__btn{
    border:1px solid var(--color-dark-white);
    border-radius:var(--size-border-radius);
    font-size:var(--font-regular);
    padding:8px 48px;
    position:relative;
}
.category__btn.selected,
.category__btn:hover{
    background-color:var(--color-pink);
    color:var(--color-white);
    /* categroy__btn이 active를 가지거나, 마우스가 올라간다면 */
    /* 이것도 처음 보는 기능이다. 보통 >나 띄어쓰기를 해서 자식 혹은 자손요소를 가져오는 방식을 썼는데, 띄어쓰기를 하지 않으면 category__btn중 active클래스인 것 을 가져온다. */
}
.category__btn.active .category__count,
.category__btn:hover .category__count{
    opacity:1;
    top:0;
}
    /* 오 신기해. 아래의 category__count와 합쳐서 숫자가 내려오는 기능 만들었다. */
.category__count{
    background-color:var(--color-orange);
    border-radius:50%;
    color:var(--color-white);
    display:inline-block;
    width:24px;
    height:24px;
    line-height:24px;
    /* span태그이므로 너비랑 높이 주려면 display:inline-block준다. */
    position:absolute;
    /* top에 -20px을 줘서 원래 자리에서 벗어났지만 position:relative이므로 사실은 기존 그 자리를 그대로 차지하고 있다. 그래서 부모에 relative주고 얘는 absolute로 바꿨다.*/
    top:-20px;
    right:16px;
    opacity:0;
    transition:all var(--animation-duration)
}

.work__projects{
    display:flex;
    flex-wrap:wrap;
    /* flex-wrap은 공간이 모자라면 아래로 떨어지게 해준다. float:left가 display:flex와 flex-wrap:wrap의 합인가?*/
    /* 플렉스박스이다. */
    justify-content:center;
    opacity:1;
    transition: all var(--animation-duration) ease-out;
}

.work__projects.anim-out {
    opacity:0;
    transform:scale(0.96) translateY(40px);
}

.project{
    width:280px;
    height:250px;
    margin:2px;
    /* work__projects라는 플렉스 박스에 속해있다. */
    background:var(--color-light-white);
    position:relative;
    display:flex;
    justify-content:center;
    align-items: center;
    /* project사진이 세로 중앙에 위치할 수 있도록 하기 위해 project박스 자체를 flex박스로 만들어서 aline-items를 사용했으며 justify-content도 사용할 수 있게 하였다. */
}

.project.invisible{
    display:none;
}

.project__img{
    max-width:100%;
    max-height:100%
    /* 이미지가 project를 넘어서 더 커지기 때문. */
}

.project__description{
    position:absolute;
    background:black;
    display:flex;
    flex-direction:column;
    /* flex-direction을 통해 두 줄로 나눌 수 있다. 안하면 한줄에 h3랑 span들어감 */
    justify-content:center;
    width:100%;
    height:100%;
    top:0;
    left:0;
    opacity:0;
    /* 블럭태그가 줄을 먹는 것 뿐이지 설정해주지 않는 한 width가 100%인건 아니구나? */
    transform:translateY(10px);
    /* 10px정도 내려놨다가 올라오는 효과 주기 위해 */
    transition:all var(--animation-duration) ease-in;
}
.project:hover .project__description{
    opacity:0.8;
    transform:translateY(0px);
}
    /* 마우스 갖다대면 글씨 나오도록 함 */

.project__description h3{
    color:var(--color-orange);
}

.project__description h3:after{
    content:'';
    display:block;
    /* after는 inline속성이기 때문에 block이 없다면 content:''쓸 경우 어떤 것도 나타나지 않는다. 또한 h3옆에 나오겠지. inline이니까.*/
    position:relative;
    left:50%;
    transform:translateX(-50%);
    /* margin-left대신 transform:translate(-50%);로 해도될듯 */
    margin-top:8px;
    width:50px;
    height:2px;
    background-color:var(--color-dark-white);
}
    /* after 이용해서 구분선 만들었을 뿐임. border이용한 것이 아니라. 학원에서 강사님이 말했던 그것 */



/* Testimonial */
#testimonials{
    background-color:var(--color-light-white);
}

.testimonials{
    margin:40px;
}

.testimonial{
    display:flex;
    margin:32px 0;
    /* 여기서 질문, 마진을 위아래 32주면 가운데는 겹치므로 총 64px가 들어가야되는거 아닌가? flex박스때문인가? */
}

.testimonial__avatar{
    width:150px;
    height:150px;
    border-radius:50%;
}
.testimonial__avatar:nth-child(odd){
    margin-right:40px;
}
    /* testimonial__avatar의 자식중의 odd가 아니라 testimonial__avatar 중 odd인 요소들 가져온것 */
.testimonial__avatar:nth-child(even){
    margin-left:40px;
}
.testimonial__speech-bubble{
    padding:18px;
    background-color:var(--color-white);
    border-radius:var(--size-border-radius);
}
.testimonial__speech-bubble p{
    color:var(--color-light-grey);
}
.testimonial__speech-bubble a{
    color:var(--color-pink);
}


/* Contact */
#contact{
    background-color:var(--color-pink);
}

.contact__title,
.contact__email,
.contact__rights{
    color:var(--color-white);
}

.contact__title{
    margin:32px 0;
}

.contact__links{
    font-size:var(--font-large);
    margin:24px 0;
    transition:all var(--animation-duration) ease-in;
}

.contact__links i:hover{
    transform:scale(1.1);
    color:var(--color-yellow);
}

/* Scroll */
.arrow-up{
    position:fixed;
    bottom:50px;
    right:50px;
    width:70px;
    height:70px;
    font-size:50px;
    color:var(--color-white);
    background-color:var(--color-pink);
    border-radius:50%;
    opacity:0;
    transition:all 300ms ease-in;
    pointer-events:none;
}
/* display:none에서 display:block으로 바꾸면서 있다 없다 하는건 transition 줄 수 없기 때문에 opacity:0을 사용했다. */


.arrow-up.visible{
    opacity:1;
    pointer-events:auto;
}
/* opacity는 0이라 하더라도 투명도만 0일 뿐이기 때문에 클릭이 될 수도 있다. */
/* pointer-event:auto; 주면 다시 기본 속성(커서 올리면 click모양 바뀜 등) */

/* For below 768px screen width */
@media screen and (max-width:768px) {
    :root{
        --font-large:30px;
        --font-medium:18px;
        --font-regular:16px;
        --font-small:14px;
        --font-micro:12px;
    }
    .navbar__toggle-btn{
        display:block;
        /* hidden 대신 block으로 바꿔서 이젠 보여준다. */
        top:20px;
        right:16px;
        font-size:var(--font-medium);
    }
    #navbar{
        flex-direction:column;
        /* 1열종대로 보여줌. 근데 toggle-btn은 포지션absolute이므로 이거의 영향은 안받는듯? */
        align-items:flex-start;
        background-color:var(--color-pink);
    }
    #navbar.navbar--dark{
        padding:16px;
    }
    .navbar__menu{
        flex-direction:column;
        /* 1열종대로 보여줌 */
        text-align:center;
        width:100%;
        display:none;
    }

    .navbar__menu.open{
        display:block;
    }

    .section{
        padding:16px;
        padding-top:40px;
    }

    .about__majors{
        flex-direction:column;
        /* 1열종대로 보여줌 */
        margin-top:30px;
        margin-bottom:0px;
    }

    .major{
        margin-bottom:30px;
    }
    
    .skillset{
        flex-direction:column;
    }

    .category__btn{
        /* padding:8px; */
        /* margin:4px 0; */
        width:100%;
    }

    .project{
        flex-grow:1;
        /* 화면이 작으면 플렉스 그로우를 이용해서 딱 맞게 */
        /* 오 배경을 늘려준다 신기함 */
    }

    .testimonial{
        flex-direction:column;
        align-items:center;
    }
        /* testimonial은 flex 박스이고(display=flex), flex-direction은 column이다. 즉 세로배열 */
        /* 그렇기 때문에 align-items:center를 줬을 때 가로기준 중앙으로 오는 것 같은 효과가 보여지는듯 */

    .testimonial__avatar{
        width:120px;
        height:120px;
        /* 사진이 상대적으로 너무 커지므로 줄여준다. */
    }
    .testimonial__avatar:nth-child(even),
    .testimonial__avatar:nth-child(odd){
        margin:0;
        /* 기본모드에선 이전에 홀수애들은 우측에 마진, 짝수애들은 좌측에 마진 줬었음. 그래서 애들 마진 지워준 것. 그냥 nth-child(n)으로만 해도 될듯.*/
        margin-bottom:8px;
    }
    .testimonial__speech-bubble{
        order:1;
        /* 기본은 order가 0으로 설정돼있다. 숫자가 커질수록 순서가 빨라지는 것. order=1로 해주면 testimonial의 자식요소인 speech-bubble이 다른 자식요소인 avatar보다 먼저온다 */
    }
    .arrow-up{
        width:50px;
        height:50px;
        font-size:30px;
        line-height:50px;
        right:16px;
        bottom:16px;
    }
}